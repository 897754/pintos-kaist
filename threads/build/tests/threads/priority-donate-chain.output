Kernel command line: -q run priority-donate-chain
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  13,094,400 loops/s.
Boot complete.
Executing 'priority-donate-chain':
(priority-donate-chain) begin
(priority-donate-chain) main got lock.
(priority-donate-chain) main should have priority 3.  Actual priority: 3.
(priority-donate-chain) main should have priority 6.  Actual priority: 6.
(priority-donate-chain) main should have priority 9.  Actual priority: 6.
(priority-donate-chain) interloper 3 finished.
(priority-donate-chain) main should have priority 12.  Actual priority: 6.
(priority-donate-chain) interloper 4 finished.
(priority-donate-chain) main should have priority 15.  Actual priority: 6.
(priority-donate-chain) interloper 5 finished.
(priority-donate-chain) main should have priority 18.  Actual priority: 6.
(priority-donate-chain) interloper 6 finished.
(priority-donate-chain) main should have priority 21.  Actual priority: 6.
(priority-donate-chain) interloper 7 finished.
(priority-donate-chain) thread 1 got lock
(priority-donate-chain) thread 1 should have priority 21. Actual priority: 3
Kernel PANIC at ../../threads/thread.c:291 in thread_current(): assertion `is_thread (t)' failed.
Call stack: 0x8004213878 0x8004206f35 0x800420a37a 0x8004216906 0x8004216a24 0x8004210d7b 0x8004208c48 0x8004208abc 0x8004208ea3 0x800421693d 0x8004216a24 0x8004210d7b 0x8004208c48 0x8004208abc 0x8004208ea3 0x800421693d 0x8004216a24 0x8004210d7b 0x8004208c48 0x8004208abc 0x8004208ea3 0x800421693d 0x8004216a24 0x8004210d7b 0x8004208c48 0x8004208abc 0x8004208ea3 0x800421693d 0x8004216a24 0x8004210d7b 0x8004208c48 0x8004208abc 0x8004208ea3 0x800421693d 0x8004216a24 0x8004210d7b 0x8004208c48 0x8004208abc 0x8004208ea3 0x800421693d 0x8004216a24 0x8004210d7b 0x8004208c48 0x8004208abc 0x8004208ea3 0x800421693d 0x8004216a24 0x8004210d7b 0x8004216d73 0x8004219d47 0x8004207321.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 47 ticks
Thread: 0 idle ticks, 47 kernel ticks, 0 user ticks
Console: 2