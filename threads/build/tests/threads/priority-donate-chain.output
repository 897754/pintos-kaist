Kernel command line: -q run priority-donate-chain
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  419,020,800 loops/s.
Boot complete.
Executing 'priority-donate-chain':
(priority-donate-chain) begin
(priority-donate-chain) main got lock.
(priority-donate-chain) main should have priority 3.  Actual priority: 0.
(priority-donate-chain) main should have priority 6.  Actual priority: 0.
(priority-donate-chain) main should have priority 9.  Actual priority: 0.
(priority-donate-chain) main should have priority 12.  Actual priority: 0.
(priority-donate-chain) main should have priority 15.  Actual priority: 0.
(priority-donate-chain) main should have priority 18.  Actual priority: 0.
(priority-donate-chain) main should have priority 21.  Actual priority: 0.
(priority-donate-chain) main finishing with priority 0.
(priority-donate-chain) end
Execution of 'priority-donate-chain' complete.
Timer: 23 ticks
Thread: 0 idle ticks, 23 kernel ticks, 0 user ticks
Console: 1079 characters output
Keyboard: 0 keys pressed
Powering off...
Kernel PANIC at ../../threads/thread.c:281 in thread_current(): assertion `t->status == THREAD_RUNNING' failed.
Call stack: 0x80042133b5 0x8004206f2f 0x8004206e6b 0x8004219736 0x800420721d.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 24 ticks
Thread: 0 idle ticks, 24 kernel ticks, 0 user ticks
Console: 1