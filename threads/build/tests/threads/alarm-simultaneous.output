Kernel command line: -q run alarm-simultaneous
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  419,020,800 loops/s.
Boot complete.
Executing 'alarm-simultaneous':
(alarm-simultaneous) begin
(alarm-simultaneous) Creating 3 threads to sleep 5 times each.
(alarm-simultaneous) Each thread sleeps 10 ticks each time.
(alarm-simultaneous) Within an iteration, all threads should wake up on the same tick.
Kernel PANIC at ../../threads/thread.c:317 in thread_yield(): assertion `!intr_context ()' failed.
Call stack: 0x800421342d 0x800420706c 0x8004207aa0 0x8004206e0f 0x80042079c7 0x800420d1fb 0x800420897f 0x8004208d9d 0x800420ae7a 0x800420aee2 0x8004206b65 0x800421729c 0x80042170b6 0x8004216869 0x8004206636 0x8004206783 0x8004206120.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 23 ticks
Thread: 0 idle ticks, 23 kernel ticks, 0 user ticks
Console: 1